!Rakefile開発に関するメモ
!!ファイル名とdirectoryの対応表
  
||執筆directory:test_bob||hikiシステム||latex_dir
||test_bob/test_bob.hiki||test_bob||test_bob/latex_dir/test_bob.tex
||test_bob/hiki_dir/test_bob.hiki||test_bob||test_bob/latex_dir/test_bob.tex
||test_bob/figs/test0.png||test_bob_figs/test0.png||
!!日本語のcode listings
日本語のjlistingの使用法が判明しました．
listingsでは日本語表示がちゃんとなされません．そこで，
 \usepackage{listings,jlisting}
とします．これで，日本語が含まれたcodeも綺麗に表示してくれます．


!!システムの概要
卒論編集システム開発時のメモです．図{{ref(fig:SystemOverview)}}に卒論編集システムの概観を示しています．

hikiシステムとの同期は，hikiutilsのhikiが下請けしている．
一方，latex_dirへの出力はlatex2hikiが引き受けている．
フォーマットをいじるときには，基本的に
:hikiへ:hikiがやるので，そのまえにtmp.txtへ写して置換
:texへ:latex2hikiからの出力(tmp.txt)を処理してtexへ
で行っている，あるいはおこなう．

!!参照機能の実装
Latexの参照機能を通すための変換を行っています．そのための記述の仕方は{{ref(fig:CiteRefSystems)}}を参照してください．実際のcodeはRakefile内で
*hikiはrake syncした時にtmpで変換させてそれを転送
*latexはhiki2latexで出てきた結果を変換
しています．hiki2latex, latex2hikiへの実装も考えたのですが．．．

attach_anchor, titleとかは変換しているので，そちらで実装する方がいいかもしれません．
どこまでを汎用ライブラリでさせて，どこからを個別のRafefileに入れるかの判断基準を
これから明確化していく必要があるでしょう．
!!rake mk_toc
latexが作成するtableofcontentsの実態であるtocファイルからhiki用のtoc.hikiを作成する．

