{{toc}}
!title:コマンドラインツール作成ライブラリThorによるhikiutilsの書き換え
!author:関西学院大学理工学部情報科学科 27013554 山根亮太

![[hikiutils_yamane_abstract]]
![[hikiutils_yamane_introduction]]
!方法
!序論
!!目的
!!既存システムの説明
図に従ってhiki systemの動作概要を説明する．

!!!caption:hiki web systemとhiki systemの対応関係．
{{attach_view(hikiutils_yamane.006.jpeg,hikiutils_yamane)}}

hikiは，hiki記法を用いたwiki cloneです．wikiはウォード・カニンガムが作ったwikiwikiwebを源流とするhome page制作を容易にするシステムで，hikiもwikiの基本要求仕様を満足するシステムを提供しています．wikiの特徴であるweb上で編集する機能を提供しています．これを便宜上hiki web systemと呼びます．図にある通り，一般的な表示画面の他に，編集画面が提供されており，ユーザーはこの編集画面からコンテンツを編集することが可能です．リンクやヘッダー，リスト，引用，表，図の表示などの基本テキストフォーマットが用意されています．

hiki web systemの実際の基本動作は，hiki.cgiプログラムを介して行われています．こちらを便宜上hiki systemと呼びます．hiki systemは，data/textに置かれた書かれたプレーンテキストをhtmlへ変換します．この変換はhikidoc[1-1]というhikiフォーマットconverterを使っています．また，添付書類はcache/attachに，一度フォーマットしたhtmlはparserに置かれており，それらを参照してhtmlを表示する画面をhiki.cgiは作っています．さらにhiki systemでは検索機能，自動リンク作成などが提供されています

研究室内の内部文書，あるいは外部への宣伝資料，さらにwikipediaのように重要な研究成果の発信などに西谷研ではこのhiki systemを利用しています．初心者にも覚えやすい直感的な操作です．しかし，慣れてくるとテキスト編集や画面更新にいちいちweb画面へ移行せねばならず，編集の思考が停止します．そこで，テキスト編集に優れたeditorとの連携や，terminal上のshell commandと連携しやすいようにhikiutilsというcli(command line interface)を作成して運用しています．このhikiutilsのコマンドオプションの実装をしなおして，より使いやすくすることが本研究の目的です．

![[hikiutils_yamane_results]]
!結果
!!thor と optparse のコードの比較

!参考文献
[1-1] hikidoc, https://rubygems.org/gems/hikidoc/versions/0.1.0, https://github.com/hiki/hikidoc,2017/1/30 アクセス.

# 「hiki」,hikiwiki.org/ja/about.html ,2017/1/30 アクセス.
# 「hikiutils」,https://rubygems.org/gems/hikiutils ,2017/1/30 アクセス.
# 「The Ruby Toolbox」, CLI Option Parsers,https://www.ruby-toolbox.com/categories/CLI_Option_Parsers ,2017/1/30 アクセス.
# 「Thorの使い方まとめ」, http://qiita.com/succi0303/items/32560103190436c9435b ,2017/1/30 アクセス.
# 「15.5. optparse - コマンドラインオプション解析器」, http://docs.python.jp/2/library/optparse.html ,2017/1/30 アクセス.
# 「library optparse」, https://docs.ruby-lang.org/ja/latest/library/optparse.html ,2017/1/30 アクセス.



